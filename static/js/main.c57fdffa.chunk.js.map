{"version":3,"sources":["components/FilterOption.js","components/Filtro.js","components/App.js","index.js"],"names":["CheckboxCustom","withStyles","root","color","cyan","checked","props","Checkbox","FilterOption","name","checkedInit","setCheckedInit","FormControl","component","FormGroup","row","FormControlLabel","value","control","includes","onChange","filter","item","label","labelPlacement","Filtro","FilterStyle","map","i","styled","div","Content","App","useState","showFilter","setShowFilter","console","log","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gQAOMA,EAAiBC,YAAW,CAC9BC,KAAM,CACJC,MAAOC,IAAK,KACZ,YAAa,CACXD,MAAOC,IAAK,OAGhBC,QAAS,IAPUJ,EAQlB,SAACK,GAAD,OAAW,cAACC,EAAA,EAAD,aAAUJ,MAAM,WAAcG,OAG/B,SAASE,EAAT,GAA2D,IAApCC,EAAmC,EAAnCA,KAAMC,EAA6B,EAA7BA,YAAaC,EAAgB,EAAhBA,eASrD,OACI,cAACC,EAAA,EAAD,CAAaC,UAAU,WAAvB,SACI,cAACC,EAAA,EAAD,CAAW,aAAW,WAAWC,KAAG,EAApC,SACI,cAACC,EAAA,EAAD,CACAC,MAAM,MACNC,QAAS,cAAClB,EAAD,CAAgBK,QAASK,EAAYS,SAASV,GAAOW,SAb1E,WACOV,EAAYS,SAASV,GACtBE,EAAeD,EAAYW,QAAO,SAAAC,GAAI,OAAIA,IAASb,MAEnDE,EAAe,GAAD,mBAAKD,GAAL,CAAkBD,QAU1Bc,MAAOd,EACPe,eAAe,Y,cC/BhB,SAASC,EAAT,GAA+C,IAA9Bd,EAA6B,EAA7BA,eAAgBD,EAAa,EAAbA,YAe5C,OACI,eAACgB,EAAD,WACA,wCAhBS,CACT,SACA,QACA,QACA,OACA,UACA,YACA,gBACA,MACA,MACA,MACA,QAMOC,KAAI,SAAClB,EAAKmB,GAAN,OAEP,aADA,CACCpB,EAAD,CAAcC,KAAMA,EAAcE,eAAgBA,EAClDD,YAAaA,GADkBkB,SAO3C,I,EAAMF,EAAcG,IAAOC,IAAV,4Q,MCVjB,IAAMC,EAAUF,IAAOC,IAAV,qgBA0BEE,EAzCf,WACE,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAsCF,mBAAS,IAA/C,mBAAOvB,EAAP,KAAoBC,EAApB,KAEA,OACE,cAACoB,EAAD,UACE,gCACGK,QAAQC,IAAI3B,GACb,wBAAQ4B,QAAS,kBAAIH,GAAeD,IAApC,8BACCA,GAAY,cAACT,EAAD,CAAQd,eAAgBA,EAAgBD,YAAaA,UCV1E6B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c57fdffa.chunk.js","sourcesContent":["import Checkbox from '@material-ui/core/Checkbox';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport { withStyles } from '@material-ui/core/styles';\nimport { cyan } from '@material-ui/core/colors';\n\nconst CheckboxCustom = withStyles({\n    root: {\n      color: cyan[300],\n      '&$checked': {\n        color: cyan[300],\n      },\n    },\n    checked: {},\n  })((props) => <Checkbox color=\"default\" {...props} />);\n\n// object destructuring\nexport default function FilterOption({name, checkedInit, setCheckedInit}){\n    function handleChange(){\n        if(checkedInit.includes(name)){\n          setCheckedInit(checkedInit.filter(item => item !== name))\n        }else{\n          setCheckedInit([...checkedInit, name])\n        }\n      };\n    \n    return (\n        <FormControl component=\"fieldset\">\n            <FormGroup aria-label=\"position\" row>\n                <FormControlLabel\n                value=\"end\"\n                control={<CheckboxCustom checked={checkedInit.includes(name)} onChange={handleChange}/>}\n                label={name}\n                labelPlacement=\"end\"\n                />\n            </FormGroup>\n        </FormControl>\n    )\n}","import FilterOption from \"./FilterOption\";\nimport styled from \"styled-components\";\n\nexport default function Filtro({setCheckedInit, checkedInit}){\n    const names =[\n        \"Status\",\n        \"Venda\",\n        \"Valor\",\n        \"Tipo\",\n        \"Cliente\",\n        \"Documento\",\n        \"ReferÃªncia\",\n        \"TID\",\n        \"ARP\",\n        \"NSU\",\n        \"DATA\",\n    ];\n\n    return (\n        <FilterStyle>\n        <p>Filtros</p>\n        {names.map((name,i)=>(\n            //key precisa react saber\n            <FilterOption name={name} key={i} setCheckedInit={setCheckedInit}\n            checkedInit={checkedInit}/>\n        ))}\n        </FilterStyle>\n    )\n}\n\nconst FilterStyle = styled.div`\ndisplay: flex;\nflex-direction: column;\nbackground: white;\nborder-radius: 5px;\npadding-left: 20px;\nfont-family: Arial, Helvetica, sans-serif;\ncolor: #4A5E6D;\n& p{\n    padding: 4px;\n    padding-top: 15px;\n    font-weight: bold;\n}\n`","import Filtro from './Filtro';\nimport \"../reset.css\"\nimport styled from 'styled-components';\nimport {useState} from \"react\";\n\nfunction App() {\n  const [showFilter, setShowFilter] = useState(false)\n  const [checkedInit, setCheckedInit] = useState([])\n\n  return (\n    <Content>\n      <div>\n        {console.log(checkedInit)}\n        <button onClick={()=>setShowFilter(!showFilter)}>+ Adic. Filtro</button>\n        {showFilter? <Filtro setCheckedInit={setCheckedInit} checkedInit={checkedInit}/> : false}\n      </div>\n    </Content>\n  );\n}\n\nconst Content = styled.div`\ndisplay: flex;\n/* justify-content: center; */\nmargin-top: 15vh;\nalign-items: center;\nflex-direction: column;\nheight: 85vh;\nposition: relative;\n&>div{\n  min-width: 158px;\n  background: #eee;\n  padding: 10px 4px 4px 4px;\n  border-radius: 0px 0px 4px 4px;\n  position: absolute;\n  & button{\n    width: 100%;\n    height: 100%;\n    border-style: none;\n    margin-bottom: 4px;\n    font-weight: bold;\n    font-family: Arial, Helvetica, sans-serif;\n    color: #4dd0e1;\n  }\n}\n`\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}